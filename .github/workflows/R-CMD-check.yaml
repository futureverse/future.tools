on: [push, pull_request]
  
name: R-CMD-check

jobs:
  R-CMD-check:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"    

    timeout-minutes: 30

    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }}) ${{ matrix.config.label }}

    strategy:
      fail-fast: false
      matrix:
        config:
#          - {os: windows-latest, r: 'release'  }
#          - {os: windows-latest, r: 'oldrel'   }
#          - {os: macOS-latest,   r: 'release'  }
          - {os: ubuntu-latest,  r: 'devel'    }
          - {os: ubuntu-latest,  r: 'release'  }
#          - {os: ubuntu-latest,  r: 'oldrel'   }
#          - {os: ubuntu-latest,  r: '4.1'      }
 
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      ## Test in other locale (optional)
      LANGUAGE: ${{ matrix.config.language }}
      ## R (>= 4.4.0) Note, no trailing underscore (sic!)
      _R_COMPARE_LANG_OBJECTS: eqonly
      ## R CMD check
      _R_CHECK_CRAN_INCOMING_: false
      _R_CHECK_MATRIX_DATA_: true
      _R_CHECK_SUGGESTS_ONLY_: true
      _R_CHECK_THINGS_IN_TEMP_DIR_: true
      _R_CHECK_TESTS_NLINES_: 300
      RCMDCHECK_ERROR_ON: note
      ## Specific to futures
      R_FUTURE_CONNECTIONS_ONMISUSE: "error[details=TRUE]"
      R_FUTURE_GLOBALENV_ONMISUSE: "error"
      R_FUTURE_GLOBALS_ONREFERENCE: "warning"
      R_FUTURE_RNG_ONMISUSE: error
      
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
          
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rcmdcheck
            any::remotes
          needs: check

      - name: Install package itself (special case)
        run: |
          install.packages(".", repos = NULL, type = "source")  ## needed by parallel workers
          remotes::install_github("futureverse/doFuture", ref = "develop")
          
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          parallelly::availableCores(which = "all")
          sapply(c(physical_cores = FALSE, logical_cores = TRUE), parallel::detectCores)
          if (require(RhpcBLASctl, quietly=TRUE)) c(get_num_procs = get_num_procs(), get_num_cores = get_num_cores(), blas_get_num_procs = blas_get_num_procs(), omp_get_num_procs = omp_get_num_procs(), omp_get_max_threads = omp_get_max_threads())
          capabilities()
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
          ## Verify LANGUAGE settings by generating a translatable error
          cat(sprintf("LANGUAGE=%s\n", sQuote(Sys.getenv("LANGUAGE"))))
          cat(sprintf("locales: %s\n", sQuote(Sys.getlocale())))
          tryCatch(log("a"), error = conditionMessage)
        shell: Rscript {0}

      - name: Check
        if: runner.os != 'Windows'
        run: |
          rcmdcheck::rcmdcheck(
            args = c("--no-manual", "--as-cran"),
            check_dir = "check"
          )
        shell: Rscript {0}
 
      - name: Check (Windows)
        if: runner.os == 'Windows'
        run: |
          rcmdcheck::rcmdcheck(
            args = c("--no-manual", "--as-cran", if (getRversion() >= "4.2.0") "--no-multiarch"),
            check_dir = "check"
          )
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check
